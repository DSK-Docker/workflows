name: workflows
on:
  workflow_call:
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_PASSWORD:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      MAIL_USERNAME:
        required: true
      MAIL_PASSWORD:
        required: true
  
jobs:
  test-build-and-publish:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract last commit timestamp
        id: commit-date
        run: echo "::set-output name=COMMIT_DATE::$(git log -1 --pretty=%ci | sed -e s'/[-:+]//'g -e s'/ /_/'g)"

      - name: Generate metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: ${{ steps.commit-date.outputs.COMMIT_DATE }}
          flavor: latest=true

      - name: Build container
        uses: docker/build-push-action@v2.10.0
        with:
          load: true
          context: .
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Test new container
        id: test
        run: |
          echo "::group::Start container"
          echo "Running container with name test_subject"
          output=$(docker run --detach --name test_subject -v /var/run/docker.sock:/var/run/docker.sock:ro ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest)
          echo "$output"
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=run::$output" 
          echo "::endgroup::"
          echo "::group::Test container"
          echo "Waiting for 10 seconds to wait for container initializatzion"
          sleep 10
          echo "Showing container logs"
          output=$(docker logs test_subject)
          echo "$output"
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=logs::$output" 
          echo "Showing container stats"
          output=$(docker exec test_subject ps -ef)
          echo "$output"
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=stats::$output" 
          echo "::endgroup::"
          echo "::group::Stop container"
          echo "Stopping container"
          output=$(docker stop test_subject)
          echo "$output"
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=stop::$output" 
          echo "Removing container"
          output=$(docker rm test_subject)
          echo "$output"
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=remove::$output" 
          echo "::endgroup::"

      - name: Send test results
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: mail.dschinghis-kahn.net
          server_port: 465
          username:  ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          from: coding@dschinghis-kahn.net
          to: coding@dschinghis-kahn.net
          subject: "Test results for build of ${{ github.repository }}!"
          body: "Here are the results of the test of the recent build:"
          #\n${{ steps.test.outputs.logs }}\n\n${{ steps.test.outputs.stats }}\n"

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Push to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v2.10.0
        with:
          push: true
          context: .
          tags: ${{ steps.metadata.outputs.tags }}

      - name: Sync readme and description
        if: ${{ github.event_name != 'pull_request' }}
        uses: meeDamian/sync-readme@v1.0.6
        continue-on-error: true
        with:
          user: ${{ secrets.DOCKER_HUB_USERNAME }}
          pass: ${{ secrets.DOCKER_HUB_PASSWORD }}
          slug: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          description: true
