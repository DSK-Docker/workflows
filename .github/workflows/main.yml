name: workflows
on:
  workflow_call:
    inputs:
      docker-run-config:
        description: 'Custom docker command to run the container (used for automarted testing).'
        required: false
        type: string
        default: "docker run"
      docker-stats-command:
        description: 'Custom command to gather stats from the container (used for automarted testing).'
        required: false
        type: string
        default: "ps -ef"
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_PASSWORD:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      MAIL_USERNAME:
        required: true
      MAIL_PASSWORD:
        required: true

jobs:
  build-test-and-publish:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract last commit timestamp
        id: commit-date
        run: echo "COMMIT_DATE=$(git log -1 --pretty=%ci | sed -e s'/[-:+]//'g -e s'/ /_/'g)" >> $GITHUB_OUTPUT

      - name: Generate metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: ${{ steps.commit-date.outputs.COMMIT_DATE }}
          flavor: latest=true

      - name: Build container
        uses: docker/build-push-action@v5.3.0
        with:
          load: true
          context: .
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Test new container
        id: test
        run: |
          echo "::group::Start container"
          echo "Running container with name test_subject"
          sh -c "${{ inputs.docker-run-config }} --detach --name test_subject ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest"
          echo "::endgroup::"
          echo "::group::Test container"
          echo "Waiting for 10 seconds for container initialization"
          sleep 10
          echo "Showing container logs"
          output=$(docker logs test_subject 2>&1)
          echo "$output"
          echo "LOGS<<EOF
          $output
          EOF" >> $GITHUB_OUTPUT
          echo "Showing container stats"
          output=$(docker exec test_subject sh -c "${{ inputs.docker-stats-command }} 2> /dev/null || echo 'Stats command not available! (${{ inputs.docker-stats-command }})'")
          echo "$output"
          echo "STATS<<EOF
          $output
          EOF" >> $GITHUB_OUTPUT
          echo "::endgroup::"
          echo "::group::Stop container"
          echo "Stopping container"
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
          echo "::endgroup::"

      - name: Generate summary
        run: |
          cat << EOF > results.txt
          Test results for build of ${{ github.repository }}
          
          - Logs from the container:
          ${{ steps.test.outputs.LOGS }}
          
          - Statistics from the stats command:
          ${{ steps.test.outputs.STATS }}
          EOF
          cat results.txt

      - name: Send test results
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        uses: dawidd6/action-send-mail@v3.10.0
        with:
          server_address: mail.dschinghis-kahn.net
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: coding@dschinghis-kahn.net
          from: coding@dschinghis-kahn.net
          subject: "[GitHub - Actions] Test results for build of ${{ github.repository }}"
          body: file://results.txt

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Push to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          context: .
          tags: ${{ steps.metadata.outputs.tags }}

      - name: Sync readme and description
        if: ${{ github.event_name != 'pull_request' }}
        uses: meeDamian/sync-readme@v1.0.6
        continue-on-error: true
        with:
          user: ${{ secrets.DOCKER_HUB_USERNAME }}
          pass: ${{ secrets.DOCKER_HUB_PASSWORD }}
          slug: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          description: true
